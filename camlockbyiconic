-- Configuration (60 ping default sets)
local Configuration = {
    Smoothing = 0.59,
    MaxLockDistance = 850,
    Prediction = 3.42, -- (Da Uphill)
    PredictionOffset = Vector3.new(0.43, 0.7, 0.43) --// (X, Y, Z)
}

-- Keybinds
local Keybinds = {
    Controller = Enum.KeyCode.ButtonY,
    Keyboard = Enum.KeyCode.E,
}

-- Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Variables
local camera = game.Workspace.CurrentCamera
local plrLocked = false
local targetPlayer = nil

-- Functions
local function FindClosestPlayer()
    local closestDist = Configuration.MaxLockDistance
    local closestPlayer = nil
    local myPos = game.Players.LocalPlayer.Character.UpperTorso.Position
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetPos = player.Character.HumanoidRootPart.Position
            local distance = (targetPos - myPos).magnitude
            if distance < closestDist then
                closestDist = distance
                closestPlayer = player
            end
        end
    end
    return closestPlayer
end

local function PredictTargetPosition(targetPosition, speed)
    local timeToReachHorizontal = (targetPosition.X - camera.CFrame.Position.X) / speed
    local timeToReachVertical = (targetPosition.Y - camera.CFrame.Position.Y) / speed
    local predictedX = targetPosition.X + targetPlayer.Character.HumanoidRootPart.Velocity.X * timeToReachHorizontal
    local predictedY = targetPosition.Y + targetPlayer.Character.HumanoidRootPart.Velocity.Y * timeToReachVertical
    local predictedZ = targetPosition.Z + targetPlayer.Character.HumanoidRootPart.Velocity.Z * timeToReachHorizontal
    local predictedPosition = Vector3.new(predictedX, predictedY, predictedZ) + Configuration.PredictionOffset
    return predictedPosition
end

-- Additional Function
local function ShowNotification(playerName)
    game.StarterGui:SetCore("SendNotification", {
        Title = "heap.sh",
        Text = playerName.." Locked on",
        Duration = 5,
    })
end

-- Input Handlers
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Gamepad1 and input.KeyCode == Keybinds.Controller then
        plrLocked = not plrLocked
        if plrLocked then
            targetPlayer = FindClosestPlayer()
            if targetPlayer then
                ShowNotification(targetPlayer.DisplayName)
            end
        else
            targetPlayer = nil
        end
    elseif input.KeyCode == Keybinds.Keyboard then
        plrLocked = not plrLocked
        if plrLocked then
            targetPlayer = FindClosestPlayer()
            ShowNotification(targetPlayer.DisplayName)
        else
            targetPlayer = nil
        end
    end
end)

-- Camera Update
RunService.Heartbeat:Connect(function()
    if plrLocked and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
        local speed = targetPlayer.Character.Humanoid.WalkSpeed * Configuration.Prediction
        targetPosition = PredictTargetPosition(targetPosition, speed)
        local cameraPosition = camera.CFrame.Position
        local offsetDirection = (targetPosition - cameraPosition).unit
        local newCameraPosition = targetPosition - offsetDirection
        camera.CFrame = camera.CFrame:Lerp(CFrame.new(newCameraPosition, targetPosition), Configuration.Smoothing)
    end
end)
